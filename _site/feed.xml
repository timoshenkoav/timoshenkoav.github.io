<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alex&#39;s Blog</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 03 Aug 2016 13:38:28 +0200</pubDate>
    <lastBuildDate>Wed, 03 Aug 2016 13:38:28 +0200</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Use docker to deploy rails app</title>
        <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Download and install docker
https://docs.docker.com/docker-for-mac/&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add Docker bash completions
&lt;code&gt;
cd /usr/local/etc/bash_completion.d
ln -s /Applications/Docker.app/Contents/Resources/etc/docker.bash-completion
ln -s /Applications/Docker.app/Contents/Resources/etc/docker-machine.bash-completion
ln -s /Applications/Docker.app/Contents/Resources/etc/docker-compose.bash-completion
&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 18 Jul 2016 15:40:00 +0200</pubDate>
        <link>http://localhost:4000/2016/07/18/docker_rails_app.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/07/18/docker_rails_app.html</guid>
        
        <category>rails</category>
        
        <category>docker</category>
        
        
      </item>
    
      <item>
        <title>Android Gradle plugin sample</title>
        <description>&lt;p&gt;Plugin will upload apk to distribution system after building release artifact.&lt;/p&gt;

&lt;h3&gt;Create Project&lt;/h3&gt;

&lt;p&gt;Create plugin project in IntelliJ IDEA. Go to &lt;strong&gt;File&lt;/strong&gt;-&amp;gt;&lt;strong&gt;New&lt;/strong&gt;-&amp;gt;&lt;strong&gt;Project&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Select Gradle and add Groovy Framework&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/gradle_plugin_upload/new_project.jpg&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Name your plugin:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/gradle_plugin_upload/plugin_name.jpg&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Select gradle settings:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/gradle_plugin_upload/gradle_settings.jpg&quot;/&gt;&lt;/p&gt;

&lt;p&gt;And save your plugin:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/gradle_plugin_upload/plugin_save.jpg&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;Add Groovy dependency&lt;/h3&gt;

&lt;p&gt;Change &lt;strong&gt;build.gradle&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;group &amp;#39;com.tunebrains.beta&amp;#39;
version &amp;#39;1.0-SNAPSHOT&amp;#39;

task wrapper(type: Wrapper) {
  gradleVersion = &amp;#39;2.2&amp;#39;
  distributionUrl = &amp;quot;https://services.gradle.org/distributions/gradle-$gradleVersion-bin.zip&amp;quot;
}

apply plugin: &amp;#39;java&amp;#39;
apply plugin: &amp;#39;groovy&amp;#39;

sourceCompatibility = 1.7

repositories {
    mavenCentral()
}

dependencies {
    compile &amp;#39;org.codehaus.groovy:groovy-all:2.3.11&amp;#39;

    compile gradleApi()
    compile localGroovy()
    compile &amp;#39;com.android.tools.build:gradle:0.14.0&amp;#39;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Configure plugin and deploy to local folder&lt;/h3&gt;

&lt;p&gt;Create folder structure&lt;/p&gt;

&lt;p&gt;Project Root
&lt;span&gt;
&lt;br&gt;
&lt;span style=&quot;margin-left: 10px;&quot;&gt;
- src
&lt;/span&gt;
&lt;br&gt;
&lt;span style=&quot;margin-left: 20px;&quot;&gt;- main&lt;/span&gt;
&lt;br&gt;
&lt;span style=&quot;margin-left: 40px;&quot;&gt;
- groovy
&lt;/span&gt;
&lt;br&gt;
&lt;span style=&quot;margin-left: 40px;&quot;&gt;
- resources
&lt;/span&gt;
&lt;br&gt;
&lt;span style=&quot;margin-left: 60px;&quot;&gt;
- META-INF
&lt;/span&gt;
&lt;br&gt;
&lt;span style=&quot;margin-left: 80px;&quot;&gt;
- gradle-plugins&lt;br&gt;
&lt;/span&gt;&lt;br&gt;
&lt;br&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Create plugin description file under &lt;strong&gt;gradle-plugins&lt;/strong&gt; folder&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;File Name:&lt;/strong&gt; &lt;em&gt;com.tunebrains.beta-gradle-beta-upload.properties&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;implementation-class=com.tunebrains.beta.gradle.UploadApkPlugin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create groovy class &lt;strong&gt;com.tunebrains.beta.gradle.UploadApkPlugin&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tunebrains&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;gradle&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.gradle.api.Plugin&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.gradle.api.Project&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UploadApkPlugin&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Plugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Project&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Apply maven plugin to &lt;strong&gt;build.gradle&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;apply plugin: &amp;#39;maven&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Specify folder to deploy plugin&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: &amp;quot;file:///Users/alex/Projects/Tutorials/repo&amp;quot;)
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Execute gradle tast to upload archive. Refresh gradle task if required.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/gradle_plugin_upload/upload_archive.jpg&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;Apply plugin in your Android project.&lt;/h3&gt;

&lt;p&gt;In top level &lt;strong&gt;build.gradle&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;buildscript {
    repositories {
        //...
        maven {
            url uri(&amp;#39;file:///Users/alex/Projects/Tutorials/repo&amp;#39;)
        }
    }
    dependencies {

        classpath group: &amp;#39;com.tunebrains.beta&amp;#39;, name: &amp;#39;releaseupload&amp;#39;,
                version: &amp;#39;1.0-SNAPSHOT&amp;#39;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In app level &lt;strong&gt;build.gradle&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Apply plugin:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;apply plugin: &amp;#39;com.tunebrains.beta-release-upload&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Its time for write some code.&lt;/p&gt;

&lt;p&gt;We will add custom tasks &lt;strong&gt;betaDebug&lt;/strong&gt; and &lt;strong&gt;betaRelease&lt;/strong&gt; to upload debug and release apks.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;pProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasProp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;android&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hasProp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;whenTaskAdded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;pProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;android&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;applicationVariants&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variant&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expectingTask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;package${variant.name.capitalize()}&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expectingTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variantName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;

                    &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newTaskName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;beta${variantName.capitalize()}&amp;quot;&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;pProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newTaskName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;c1&quot;&gt;//write task code&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To perform multipart post add apache dependencies to &lt;strong&gt;build.gradle&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;compile &amp;#39;org.apache.httpcomponents:httpmime:4.+&amp;#39;
compile &amp;#39;commons-io:commons-io:2.+&amp;#39;
compile &amp;#39;org.apache.commons:commons-compress:1.+&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To get resulting apk for upload we can use task field&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apkFilename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;outputFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 11 Jan 2016 14:40:00 +0100</pubDate>
        <link>http://localhost:4000/2016/01/11/gradle-plugin-upload%20copy.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/01/11/gradle-plugin-upload%20copy.html</guid>
        
        <category>android</category>
        
        <category>gradle</category>
        
        <category>plugin</category>
        
        
      </item>
    
      <item>
        <title>Custom Chromecast Receiver App</title>
        <description>&lt;p&gt;Simple tutorial how to create android application with Chromecast Custom Receiver that plays custom video url.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to https://cast.google.com/publish and register new &lt;strong&gt;Custom Receiver&lt;/strong&gt; app &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 11 Jan 2016 14:40:00 +0100</pubDate>
        <link>http://localhost:4000/2016/01/11/2016-01-11-custom-chromecast-receiver-app.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/01/11/2016-01-11-custom-chromecast-receiver-app.html</guid>
        
        <category>android</category>
        
        <category>chromecast</category>
        
        
      </item>
    
      <item>
        <title>Block domains with vpn</title>
        <description>&lt;ol&gt;
&lt;li&gt;Create VpnService class&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;public class VpnConnectionBlocker extends VpnService {

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Register it in AndroidManifest.xml&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;service android:name=&amp;quot;.VpnConnectionBlocker&amp;quot;
         android:permission=&amp;quot;android.permission.BIND_VPN_SERVICE&amp;quot;&amp;gt;
    &amp;lt;intent-filter&amp;gt;
        &amp;lt;action android:name=&amp;quot;android.net.VpnService&amp;quot;/&amp;gt;
    &amp;lt;/intent-filter&amp;gt;
&amp;lt;/service&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Request VPN service to start&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;private static final int REQUEST_VPN = 0x10;
//...
startActivityForResult(VpnConnectionBlocker.prepare(MainActivity.this), REQUEST_VPN);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Handle user action and start VPN service&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    switch (requestCode){
        case REQUEST_VPN:
            if (resultCode == RESULT_OK) {
                startService(new Intent(MainActivity.this, VpnConnectionBlocker.class));
            }
            break;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        <pubDate>Tue, 10 Nov 2015 17:48:00 +0100</pubDate>
        <link>http://localhost:4000/2015/11/10/block-domains-with-vpn.html</link>
        <guid isPermaLink="true">http://localhost:4000/2015/11/10/block-domains-with-vpn.html</guid>
        
        <category>android</category>
        
        <category>vpn</category>
        
        
      </item>
    
  </channel>
</rss>
